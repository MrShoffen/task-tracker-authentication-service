### Configurations from config server
jwt-user:
  keys:
    access-token-key: '{"kty":"oct","k":"h4dfgRX5ZRZooHem3mEnctZ-KtR9FoESgCnH-3BNgde8"}'
    refresh-token-key: '{"kty":"oct","k":"95dfNwiBe7vR5KnbguLr5irJD-a2gesF"}'
  ttl:
    access-ttl: 30m
    refresh-ttl: 2h
#
redis-user:
  host: 192.168.0.125
  port: 6379
#
discovery-service-user:
  server:
    hostname: localhost #discovery-user profile property
    port: 8010 #discovery-user profile properdiscovery
  credentials:
    username: user
    password: pass
#
kafka-user:
  bootstrap-servers: 192.168.0.125:29092,192.168.0.125:39092,192.168.0.125:49092
###

registration:
  max-confirmation-time: 10m


spring:
  application:
    name: authentication-ws
  profiles:
    active: discovery-service-user, redis-user, jwt-user
  config:
    import: optional:configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@${CONFIG_SERVER_HOST:localhost}:${CONFIG_SERVER_PORT:8012}

  data.redis:
    host: ${redis-user.host}
    port: ${redis-user.port}

  kafka:
    bootstrap-servers: ${kafka-user.bootstrap-servers}
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true

server.port: ${PORT:0}

eureka:
  client:
    service-url:
      defaultZone: http://${discovery-service-user.server.hostname}:${discovery-service-user.server.port}/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}